name: DevSecOps Netflix Clone

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Check Docker
        run: docker --version

      - name: Start Docker Service
        run: sudo service docker start

      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile --tag netflix-clone:latest

      - name: List Docker Images
        run: docker images

      - name: Save Docker Image as Artifact
        run: docker save netflix-clone:latest -o netflix-clone.tar
        
      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: netflix-clone.tar


  trivy_scan:
    runs-on: ubuntu-latest
    needs: build
    steps:


      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image

      - name: Load Docker Image
        run: docker load -i netflix-clone.tar
        
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y

      - name: Scan Docker Image
        run: trivy image netflix-clone:latest > trivy-report.txt

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: trivy-report.txt

  sonar_analysis:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image

      - name: Load Docker Image
        run: docker load -i netflix-clone.tar

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=my-org
            -Dsonar.projectKey=netflix-clone 
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
